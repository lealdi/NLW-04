{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/leal/Documentos/MeusProjetos/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport Cookies from 'js-cookie';\nimport challenges from \"../../challenges.json\";\nimport { LevelUpModal } from \"../components/LevelUpModal\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set(\"level\", String(level));\n    Cookies.set(\"currentExperience\", String(currentExperience));\n    Cookies.set(\"challengesCompleted\", String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio(\"/notification.mp3\").play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo Desafio\", {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 8\n  }, this);\n}\n\n_s(ChallengesProvider, \"UqHVByiPLb7kVaLDO0z8bDhE3KM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect} from \"react\"\nimport Cookies from 'js-cookie'\nimport challenges from \"../../challenges.json\"\nimport { LevelUpModal } from \"../components/LevelUpModal\";\n\n\n\ninterface Challenge {\n    type: \"body\" | \"eye\"\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: number;\n    experienceToNextLevel: number;\n    challengesCompleted: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    resetChallenge: () => void;\n    completeChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n}\n\n\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(rest.level ?? 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0)\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0)\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n    const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n\n    useEffect(() => {\n        Cookies.set(\"level\", String(level))\n        Cookies.set(\"currentExperience\", String(currentExperience))\n        Cookies.set(\"challengesCompleted\", String(challengesCompleted))\n    }, [level, currentExperience, challengesCompleted])\n  \n    function levelUp () {\n    setLevel(level + 1)\n    setIsLevelUpModalOpen(true)\n  }\n\n  function startNewChallenge() {\n\n      const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n      const challenge = challenges[randomChallengeIndex];\n\n      setActiveChallenge(challenge)\n\n      new Audio(\"/notification.mp3\").play()\n\n      if (Notification.permission === \"granted\") {\n          new Notification(\"Novo Desafio\",{\n              body: `Valendo ${challenge.amount} xp!`\n          })\n      }\n  }\n\n  function resetChallenge() {\n      setActiveChallenge(null)\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n        return;\n    }\n\n    const {amount} = activeChallenge;\n\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n        finalExperience = finalExperience - experienceToNextLevel\n        levelUp();\n    }\n\n    setCurrentExperience(finalExperience)\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1)\n  }\n\n    return (\n       <ChallengesContext.Provider \n        value={{\n            level,\n            currentExperience,\n            experienceToNextLevel,\n            challengesCompleted,\n            levelUp,\n            startNewChallenge,\n            activeChallenge,\n            resetChallenge,\n            completeChallenge,\n        }}\n       >\n            {children}\n\n            { isLevelUpModalOpen && <LevelUpModal /> }\n        </ChallengesContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}