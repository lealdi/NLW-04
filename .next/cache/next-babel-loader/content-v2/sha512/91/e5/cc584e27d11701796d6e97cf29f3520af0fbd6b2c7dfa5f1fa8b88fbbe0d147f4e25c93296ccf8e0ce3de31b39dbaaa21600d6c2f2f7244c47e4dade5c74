{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio(\"/notification.mp3\");\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo Desafio\", {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 8\n  }, this);\n}\n\n_s(ChallengesProvider, \"mXQLPpEuqfijIicM0DJuMSLmJHY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC5CL,QAAQ,CAAC,CAAD,CADoC;AAAA,MAC/DM,KAD+D;AAAA,MACxDC,QADwD;;AAAA,mBAEpBP,QAAQ,CAAC,CAAD,CAFY;AAAA,MAE/DQ,iBAF+D;AAAA,MAE5CC,oBAF4C;;AAAA,mBAGhBT,QAAQ,CAAC,CAAD,CAHQ;AAAA,MAG/DU,mBAH+D;AAAA,MAG1CC,sBAH0C;;AAAA,mBAKxBX,QAAQ,CAAC,IAAD,CALgB;AAAA,MAK/DY,eAL+D;AAAA,MAK9CC,kBAL8C;;AAOtE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAoB;AACpBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AAEzB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV;;AAEA,QAAIT,YAAY,CAACU,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIV,YAAJ,CAAiB,cAAjB,EAAgC;AAC5BW,QAAAA,IAAI,oBAAaH,SAAS,CAACI,MAAvB;AADwB,OAAhC;AAGH;AACJ;;AAED,WAASC,cAAT,GAA0B;AACtBjB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASkB,iBAAT,GAA6B;AAC3B,QAAI,CAACnB,eAAL,EAAsB;AAClB;AACH;;AAH0B,QAKpBiB,MALoB,GAKVjB,eALU,CAKpBiB,MALoB;AAO3B,QAAIG,eAAe,GAAGxB,iBAAiB,GAAGqB,MAA1C;;AAEA,QAAIG,eAAe,GAAGlB,qBAAtB,EAA6C;AACzCkB,MAAAA,eAAe,GAAGA,eAAe,GAAGlB,qBAApC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACuB,eAAD,CAApB;AACAnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAEC,sBACG,QAAC,iBAAD,CAAmB,QAAnB;AACC,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHM,MAAAA,qBAAqB,EAArBA,qBAHG;AAIHJ,MAAAA,mBAAmB,EAAnBA,mBAJG;AAKHS,MAAAA,OAAO,EAAPA,OALG;AAMHC,MAAAA,iBAAiB,EAAjBA,iBANG;AAOHR,MAAAA,eAAe,EAAfA,eAPG;AAQHkB,MAAAA,cAAc,EAAdA,cARG;AASHC,MAAAA,iBAAiB,EAAjBA;AATG,KADR;AAAA,cAaM1B;AAbN;AAAA;AAAA;AAAA;AAAA,UADH;AAiBH;;GAzEeD,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode, useEffect} from \"react\"\nimport challenges from \"../../challenges.json\"\n\ninterface Challenge {\n    type: \"body\" | \"eye\"\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: number;\n    experienceToNextLevel: number;\n    challengesCompleted: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    resetChallenge: () => void;\n    completeChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n  \n    function levelUp () {\n    setLevel(level + 1)\n  }\n\n  function startNewChallenge() {\n\n      const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n      const challenge = challenges[randomChallengeIndex];\n\n      setActiveChallenge(challenge)\n\n      new Audio(\"/notification.mp3\")\n\n      if (Notification.permission === \"granted\") {\n          new Notification(\"Novo Desafio\",{\n              body: `Valendo ${challenge.amount} xp!`\n          })\n      }\n  }\n\n  function resetChallenge() {\n      setActiveChallenge(null)\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n        return;\n    }\n\n    const {amount} = activeChallenge;\n\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n        finalExperience = finalExperience - experienceToNextLevel\n        levelUp();\n    }\n\n    setCurrentExperience(finalExperience)\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1)\n  }\n\n    return (\n       <ChallengesContext.Provider \n        value={{\n            level,\n            currentExperience,\n            experienceToNextLevel,\n            challengesCompleted,\n            levelUp,\n            startNewChallenge,\n            activeChallenge,\n            resetChallenge,\n            completeChallenge,\n        }}\n       >\n            {children}\n        </ChallengesContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}