{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n}","map":{"version":3,"sources":["/home/leal/Documentos/MeusProjetos/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAcA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;;AAGA,WAASW,OAAT,GAAoB;AACpBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASO,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,UAAU,CAACgB,MAAtC,CAA7B;AACH;;AAEC,sBACG,QAAC,iBAAD,CAAmB,QAAnB;AACC,IAAA,KAAK,EAAE;AACHZ,MAAAA,KADG;AAEHE,MAAAA,iBAFG;AAGHE,MAAAA,mBAHG;AAIHE,MAAAA,OAJG;AAKHC,MAAAA;AALG,KADR;AAAA,cASMR;AATN;AAAA;AAAA;AAAA;AAAA,UADH;AAaH","sourcesContent":["import {createContext, useState, ReactNode} from \"react\"\nimport challenges from \"../../challenges.json\"\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: Number;\n    challengesCompleted: Number;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n  \n    function levelUp () {\n    setLevel(level + 1)\n  }\n\n  function startNewChallenge() {\n      const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n  }\n\n    return (\n       <ChallengesContext.Provider \n        value={{\n            level,\n            currentExperience,\n            challengesCompleted,\n            levelUp,\n            startNewChallenge,\n        }}\n       >\n            {children}\n        </ChallengesContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}